@model BloodKoshh.Models.EventViewModel;
@{
    ViewData["Title"] = "List";
}
@using Microsoft.AspNetCore.Identity
@using BloodKoshh.Areas.Identity.Data;
@inject SignInManager<BloodKoshhUser> SignInManager
@inject UserManager<BloodKoshhUser> UserManager

<!DOCTYPE html>

<html lang="en" dir="ltr">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Registration Page</title>
    <link rel="stylesheet" href="list.css">
    <link rel="stylesheet" href="public/assets/css/style.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css"
          type="text/css">
    <script src="https://ajax.aspnetcdn.com/ajax/jQuery/jquery-1.10.0.min.js" type="text/javascript"></script>
    <script src="https://ajax.aspnetcdn.com/ajax/jquery.ui/1.9.2/jquery-ui.min.js" type="text/javascript"></script>
    <link href="https://ajax.aspnetcdn.com/ajax/jquery.ui/1.9.2/themes/blitzer/jquery-ui.css"
          rel="Stylesheet" type="text/css" />
</head>
<body>
    <div class="donor-details-panel content">
        <div style="padding:100px" class="container content-panel">
            <div class="row">
                <div class="col-md-4 col-sm-4 search-field">
                    <p style="margin: 0; background: #d14461;" class="btn search-button form-control">
                        Events <span class="hidden-sm">Lists</span>
                    </p>
                </div>
                <div class="col-md-4 col-sm-4 col-xs-6 search-field">
                </div>
                <div class="col-md-4 col-sm-4  search-field">
                    <form method="get" asp-controller="Event" asp-action="Index" class="main-container-search-section-form">
                        <input id="txtVal" type="text" placeholder="Enter Location" name="searchText" style="margin: 0; height:40px;">
                        <input id="txt" type="hidden" asp-for="EventId" />
                        <button id="btnSearch" type="submit" style="margin: 0; width:80px; height:37px; background: #d14461;" class="btn search-button form-control hidden-sm">Search</button>
                    </form>

                </div>
                <div id="EventList"></div>
            </div>
            <div class="donor-list">
                <div class="row">
                    <div class="col-md-12 donor-details" id="donorDetail">
                        <table class="table table-striped">
                            <thead>
                                <tr class="tbl-row-header">
                                    <th>S. No.</th>
                                    <th>Event Name</th>
                                    <th>Address</th>
                                    <th>Contact</th>
                                    <th>Date</th>
                                    @if (User.IsInRole("Admin"))
                                    {
                                    <th>Action</th>
                                    <th>Approve</th>
                                    }
                                </tr>
                            </thead>
                            <tbody id="donorDetailsData">
                                @{ int i = 1;}
                                @if (User.IsInRole("Admin"))
                                {
                                @foreach (var item in Model.EventList)
                                    {
                                <tr>
                                    <td data-title="id">@(i++)</td>
                                    <td itemprop="name" data-title="name" class="donor-name"> @item.EventName </td>
                                    <td itemprop="address" data-title="address">@item.Location</td>
                                    <td itemprop="blood" data-title="blood">@item.PhoneNo</td>
                                    <td itemprop="blood" data-title="blood">@item.EventDate</td>
                                    @*@if (item.Email == UserManager.GetUserAsync(User).Result.Email)
                                        {*@
                                    <td>
                                        @Html.ActionLink("Delete", "Delete", "Event", new { id = item.EventId }, new { @class = "btn btn-secondary" })
                                        @Html.ActionLink("Edit", "CreateOrEdit", "Event", new { id = item.EventId }, new { @class = "btn btn-secondary" })
                                    </td>
                                    <td>
                                        @if (item.ApprovedStatus == false)
                                        {
                                        @using (Html.BeginForm("Approve", "Event", new { Id = item.EventId }, FormMethod.Get))
                                            {
                                        <button class="btn btn-secondary">Approve Event</button>
                                            }
                                        }
                                        else
                                        {
                                        <button class="btn btn-secondary">Approved</button>
                                        }
                                    </td>
                                </tr>
                                    }

                                }
                                else
                                {
                                @foreach (var item in Model.EventList)
                                    {
                                        if (item.ApprovedStatus == true)
                                        {
                                <tr>
                                    <td data-title="id">@(i++)</td>
                                    <td itemprop="name" data-title="name" class="donor-name"> @item.EventName </td>
                                    <td itemprop="address" data-title="address">@item.Location</td>
                                    <td itemprop="blood" data-title="blood">@item.PhoneNo</td>
                                    <td itemprop="blood" data-title="blood">@item.EventDate</td>

                                </tr>
                                        }
                                    }
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <script>
        var coll = document.getElementsByClassName("collapsible");
        var i;

        for (i = 0; i < coll.length; i++) {
            coll[i].addEventListener("click", function () {
                this.classList.toggle("active");
                var content = this.nextElementSibling;
                if (content.style.display === "block") {
                    content.style.display = "none";
                } else {
                    content.style.display = "block";
                }
            });
        }
    </script>

    @*<script src="~/js/jquery-3.4.1.slim.min.js"></script>
    <script src="~/js/revealonscroll.js"></script>
    <script src="~/js/bootstrap.min.js"></script>
    <script src="~/js/scroll.js"></script>*@
</body>

</html>
<!--link for autocomplete-->
<script src="https://ajax.aspnetcdn.com/ajax/jQuery/jquery-1.10.0.min.js" type="text/javascript"></script>
<script src="https://ajax.aspnetcdn.com/ajax/jquery.ui/1.9.2/jquery-ui.min.js" type="text/javascript"></script>
<link href="https://ajax.aspnetcdn.com/ajax/jquery.ui/1.9.2/themes/blitzer/jquery-ui.css"
      rel="Stylesheet" type="text/css" />

<script type="text/javascript">
    $(function () {
        $("#txtVal").autocomplete({
            source: function (request, response) {
                $.ajax({
                    url: 'Event/Autocomplete',
                    data: { "prefix": request.term },
                    type: "POST",
                    success: function (data) {
                        response($.map(data, function (item) {
                            return item;
                        }))
                    },
                    error: function (response) {
                        alert(response.responseText);
                    },
                    failure: function (response) {
                        alert(response.responseText);
                    }
                });
            },
            select: function (e, i) {
                $("#txt").val(i.item.val);
            },
            minLength: 1
        });
        $("#btnSearch").click(function () {
            $.ajax({
                type: "GET",
                url: 'Event/Search',
                type: 'GET',
                data: {
                    query: $('#txtVal').val(),
                },
                success: function (response) {
                    $('#EventList').empty();
                    $('#EventList').html(response);
                },
                failure: function (response) {
                    alert(response.responseText);
                },
                error: function (response) {
                    alert(response.responseText);
                }
            });
            $("#approveform").submit(function (e) {
                //disable the submit button
                $("#btnSubmit").attr("disabled", true);
                return true;

            });
        });
</script>